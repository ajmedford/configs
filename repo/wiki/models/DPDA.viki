* Deterministic Pushdown Automata (DPDA)

** Emptiness is [[COM::P]]-complete:
   __Hardness__: is shown by reduction from [[COM::Circuit Value]]:
    Given a CV instance we construct a DPDA with only one state
    and one symbol.
    one simply introduces stack symbols for each gate,
    if AND-gate A has successors B,C we add a rule
        pA-->pBC.
    if OR-GATE A has successors B,C we add both
        pA --> pB, pA --> pC
    finlally add rule pT --> p to eliminate True gates.
    False cannot be removed. we accept by empty stack.
    $L(A) = \empty$ iff the circuit evaluates to True.

   __containment in P__: is shown in [[BIB::RH1978]].


